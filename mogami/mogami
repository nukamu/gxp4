#! /usr/bin/env python
# -*- coding: utf-8 -*-

import os
import sys
import subprocess
import meta
import fs
import data
from optparse import OptionParser


def main():
    usage = "Usage: %prog [mode] [options]"
    parser = OptionParser(usage)

    # options (required)
    parser.add_option("-m", "--meta", action="store_const",
                      help="metadata server mode", const=0, dest="mode")
    parser.add_option("-s", "--server", action="store_const",
                      help="data server mode", const=1, dest="mode")
    parser.add_option("-c", "--client", action="store_const",
                      help="client mode", const=2, dest="mode")
    parser.add_option("--meta_addr", dest="meta_addr", 
                      help="address of metadata server", default=None)

    # options (not required)
    parser.add_option("-f", action="store_true", 
                      help = "foreground operation", dest="f", default=False)
    parser.add_option("-d", action="store_true", 
                      help="enable debug output (implies -f)",
                      dest="debug", default=False)
    parser.add_option("--config", dest="config_path", 
                      default=None)
    
    (options, args) = parser.parse_args()

    ## handle parse error
    if options.mode == None:
        parser.error("please specify working mode" + 
                     " (--meta or --server or --client)")
    elif len(args) < 1:
        parser.error("required args are not specified: directory")
    elif len(args) > 1:
        parser.error("specified too many arguments")
    elif options.mode != 0 and options.meta_addr == None:
        parser.error("please specify the address of metadata server "
                     + "(use --meta_addr)")

    ## launch program
    if options.mode == 0:  # case of meta
        pid = os.fork()
        if pid != 0:
            sys.exit(0)
        meta.main(args[0], config=options.config_path)
    elif options.mode == 1:  # case of server
        pid = os.fork()
        if pid != 0:
            sys.exit(0)
        data.main(options.meta_addr, args[0], config=options.config_path)
    elif options.mode == 2:  # case of client
        fs_args = ['', args[0]]
        if options.debug == True:
            fs_args.append('-d')
        elif options.f == True:
            fs_args.append('-f')
        else:
            fs.main(options.meta_addr, fs_args, config=options.config_path)

if __name__ == '__main__':
    main()
